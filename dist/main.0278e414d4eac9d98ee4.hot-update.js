"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateitk_vtk_viewer"]("main",{

/***/ "./src/Rendering/VTKJS/Images/applyColorMap.js":
/*!*****************************************************!*\
  !*** ./src/Rendering/VTKJS/Images/applyColorMap.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var itk_viewer_color_maps__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! itk-viewer-color-maps */ \"./node_modules/itk-viewer-color-maps/dist/index.js\");\n\n\n// We want an offset so there is contrast with label image colors\nvar COLOR_OFFSET = 146;\nfunction applyColorMap(context, _ref) {\n  var _context$images$color;\n  var _ref$data = _ref.data,\n    name = _ref$data.name,\n    colorMap = _ref$data.colorMap,\n    component = _ref$data.component;\n  var actorContext = context.images.actorContext.get(name);\n\n  // Optional chain on colorTransferFunctions in case compare set in createViewer\n  var colorTransferFunction = (_context$images$color = context.images.colorTransferFunctions) === null || _context$images$color === void 0 ? void 0 : _context$images$color.get(component);\n\n  // if number of components increased after compare set and applyRenderedImage has not happened yet\n  if (!colorTransferFunction) return;\n  console.log(colorMap);\n  colorMap = (0,itk_viewer_color_maps__WEBPACK_IMPORTED_MODULE_0__.getColorMap)(colorMap, component + COLOR_OFFSET);\n  colorMap = {\n    \"ColorSpace\": \"Diverging\",\n    \"Name\": \"ЕУЫЕЬфз\",\n    \"NanColor\": [1, 0, 0],\n    \"License\": \"CC0\",\n    \"Creator\": \"Eric Firing\",\n    \"RGBPoints\": [0.0, 0.07197680324316025, 0.9942016005516052, 1.0, 0.02603568428377473, 0.07197680324316025, 0.9942016005516052, 1.0, 0.032007752093141065, 0.07197680324316025, 0.9942016005516052, 1.0, 0.053716490404623944, 0.07197680324316025, 0.9942016005516052, 1.0, 0.07358675051247135, 0.07197680324316025, 0.9942016005516052, 1.0, 0.3394847769555737, 0.0, 0.0, 0.0, 0.3471468813428467, 1.0, 0.0, 0.0, 0.470007544720827, 1.0, 0.99920654296875, 0.0, 1.0, 1.0, 1.0, 1.0]\n  };\n  console.log(colorMap);\n  colorTransferFunction.applyColorMap(colorMap);\n  colorTransferFunction.modified(); // applyColorMap does not always trigger modified()\n\n  if (actorContext.colorRanges.has(component)) {\n    var range = actorContext.colorRanges.get(component);\n    colorTransferFunction.setMappingRange(range[0], range[1]);\n    colorTransferFunction.updateRange();\n    // ползунки начало, конец по чб\n    console.log(range);\n  }\n\n  // update UI\n  context.service.send('IMAGE_COLOR_MAP_DEPENDENCIES_UPDATE', {\n    data: {\n      name: name,\n      component: component\n    }\n  });\n  context.service.send('RENDER');\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (applyColorMap);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvUmVuZGVyaW5nL1ZUS0pTL0ltYWdlcy9hcHBseUNvbG9yTWFwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW1EOztBQUVuRDtBQUNBLElBQU1DLFlBQVksR0FBRyxHQUFHO0FBRXhCLFNBQVNDLGFBQWFBLENBQUNDLE9BQU8sRUFBQUMsSUFBQSxFQUEyQztFQUFBLElBQUFDLHFCQUFBO0VBQUEsSUFBQUMsU0FBQSxHQUFBRixJQUFBLENBQXZDRyxJQUFJO0lBQUlDLElBQUksR0FBQUYsU0FBQSxDQUFKRSxJQUFJO0lBQUVDLFFBQVEsR0FBQUgsU0FBQSxDQUFSRyxRQUFRO0lBQUVDLFNBQVMsR0FBQUosU0FBQSxDQUFUSSxTQUFTO0VBQ2pFLElBQU1DLFlBQVksR0FBR1IsT0FBTyxDQUFDUyxNQUFNLENBQUNELFlBQVksQ0FBQ0UsR0FBRyxDQUFDTCxJQUFJLENBQUM7O0VBRTFEO0VBQ0EsSUFBTU0scUJBQXFCLElBQUFULHFCQUFBLEdBQUdGLE9BQU8sQ0FBQ1MsTUFBTSxDQUFDRyxzQkFBc0IsY0FBQVYscUJBQUEsdUJBQXJDQSxxQkFBQSxDQUF1Q1EsR0FBRyxDQUN0RUgsU0FDRixDQUFDOztFQUVEO0VBQ0EsSUFBSSxDQUFDSSxxQkFBcUIsRUFBRTtFQUU1QkUsT0FBTyxDQUFDQyxHQUFHLENBQUNSLFFBQVEsQ0FBQztFQUVyQkEsUUFBUSxHQUFHVCxrRUFBVyxDQUFDUyxRQUFRLEVBQUVDLFNBQVMsR0FBR1QsWUFBWSxDQUFDO0VBRTFEUSxRQUFRLEdBQUs7SUFDWCxZQUFZLEVBQUMsV0FBVztJQUN4QixNQUFNLEVBQUMsU0FBUztJQUNoQixVQUFVLEVBQUMsQ0FBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLENBQUMsQ0FBQztJQUNsQixTQUFTLEVBQUMsS0FBSztJQUNmLFNBQVMsRUFBQyxhQUFhO0lBQ3ZCLFdBQVcsRUFBQyxDQUNWLEdBQUcsRUFDSCxtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ2xCLEdBQUcsRUFDSCxtQkFBbUIsRUFDbkIsbUJBQW1CLEVBQ25CLGtCQUFrQixFQUNsQixHQUFHLEVBQ0gsb0JBQW9CLEVBQ3BCLG1CQUFtQixFQUNuQixrQkFBa0IsRUFDbEIsR0FBRyxFQUNILG9CQUFvQixFQUNwQixtQkFBbUIsRUFDbkIsa0JBQWtCLEVBQ2xCLEdBQUcsRUFDSCxtQkFBbUIsRUFDbkIsbUJBQW1CLEVBQ25CLGtCQUFrQixFQUNsQixHQUFHLEVBQ0gsa0JBQWtCLEVBQ2xCLEdBQUcsRUFDSCxHQUFHLEVBQ0gsR0FBRyxFQUNILGtCQUFrQixFQUNsQixHQUFHLEVBQ0gsR0FBRyxFQUNILEdBQUcsRUFDSCxpQkFBaUIsRUFDakIsR0FBRyxFQUNILGdCQUFnQixFQUNoQixHQUFHLEVBQ0gsR0FBRyxFQUNILEdBQUcsRUFDSCxHQUFHLEVBQ0gsR0FBRztFQUVQLENBQUM7RUFFRE8sT0FBTyxDQUFDQyxHQUFHLENBQUNSLFFBQVEsQ0FBQztFQUVyQksscUJBQXFCLENBQUNaLGFBQWEsQ0FBQ08sUUFBUSxDQUFDO0VBQzdDSyxxQkFBcUIsQ0FBQ0ksUUFBUSxDQUFDLENBQUMsRUFBQzs7RUFFakMsSUFBSVAsWUFBWSxDQUFDUSxXQUFXLENBQUNDLEdBQUcsQ0FBQ1YsU0FBUyxDQUFDLEVBQUU7SUFDM0MsSUFBTVcsS0FBSyxHQUFHVixZQUFZLENBQUNRLFdBQVcsQ0FBQ04sR0FBRyxDQUFDSCxTQUFTLENBQUM7SUFDckRJLHFCQUFxQixDQUFDUSxlQUFlLENBQUNELEtBQUssQ0FBQyxDQUFDLENBQUMsRUFBRUEsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ3pEUCxxQkFBcUIsQ0FBQ1MsV0FBVyxDQUFDLENBQUM7SUFDbkM7SUFDQVAsT0FBTyxDQUFDQyxHQUFHLENBQUNJLEtBQUssQ0FBQztFQUNwQjs7RUFFQTtFQUNBbEIsT0FBTyxDQUFDcUIsT0FBTyxDQUFDQyxJQUFJLENBQUMscUNBQXFDLEVBQUU7SUFDMURsQixJQUFJLEVBQUU7TUFDSkMsSUFBSSxFQUFKQSxJQUFJO01BQ0pFLFNBQVMsRUFBVEE7SUFDRjtFQUNGLENBQUMsQ0FBQztFQUNGUCxPQUFPLENBQUNxQixPQUFPLENBQUNDLElBQUksQ0FBQyxRQUFRLENBQUM7QUFDaEM7QUFFQSxpRUFBZXZCLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9pdGstdnRrLXZpZXdlci8uL3NyYy9SZW5kZXJpbmcvVlRLSlMvSW1hZ2VzL2FwcGx5Q29sb3JNYXAuanM/ZTQyZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRDb2xvck1hcCB9IGZyb20gJ2l0ay12aWV3ZXItY29sb3ItbWFwcydcclxuXHJcbi8vIFdlIHdhbnQgYW4gb2Zmc2V0IHNvIHRoZXJlIGlzIGNvbnRyYXN0IHdpdGggbGFiZWwgaW1hZ2UgY29sb3JzXHJcbmNvbnN0IENPTE9SX09GRlNFVCA9IDE0NlxyXG5cclxuZnVuY3Rpb24gYXBwbHlDb2xvck1hcChjb250ZXh0LCB7IGRhdGE6IHsgbmFtZSwgY29sb3JNYXAsIGNvbXBvbmVudCB9IH0pIHtcclxuICBjb25zdCBhY3RvckNvbnRleHQgPSBjb250ZXh0LmltYWdlcy5hY3RvckNvbnRleHQuZ2V0KG5hbWUpXHJcblxyXG4gIC8vIE9wdGlvbmFsIGNoYWluIG9uIGNvbG9yVHJhbnNmZXJGdW5jdGlvbnMgaW4gY2FzZSBjb21wYXJlIHNldCBpbiBjcmVhdGVWaWV3ZXJcclxuICBjb25zdCBjb2xvclRyYW5zZmVyRnVuY3Rpb24gPSBjb250ZXh0LmltYWdlcy5jb2xvclRyYW5zZmVyRnVuY3Rpb25zPy5nZXQoXHJcbiAgICBjb21wb25lbnRcclxuICApXHJcblxyXG4gIC8vIGlmIG51bWJlciBvZiBjb21wb25lbnRzIGluY3JlYXNlZCBhZnRlciBjb21wYXJlIHNldCBhbmQgYXBwbHlSZW5kZXJlZEltYWdlIGhhcyBub3QgaGFwcGVuZWQgeWV0XHJcbiAgaWYgKCFjb2xvclRyYW5zZmVyRnVuY3Rpb24pIHJldHVyblxyXG5cclxuICBjb25zb2xlLmxvZyhjb2xvck1hcClcclxuXHJcbiAgY29sb3JNYXAgPSBnZXRDb2xvck1hcChjb2xvck1hcCwgY29tcG9uZW50ICsgQ09MT1JfT0ZGU0VUKVxyXG5cclxuICBjb2xvck1hcCA9ICAge1xyXG4gICAgXCJDb2xvclNwYWNlXCI6XCJEaXZlcmdpbmdcIixcclxuICAgIFwiTmFtZVwiOlwi0JXQo9Cr0JXQrNGE0LdcIixcclxuICAgIFwiTmFuQ29sb3JcIjpbMSwwLDBdLFxyXG4gICAgXCJMaWNlbnNlXCI6XCJDQzBcIixcclxuICAgIFwiQ3JlYXRvclwiOlwiRXJpYyBGaXJpbmdcIixcclxuICAgIFwiUkdCUG9pbnRzXCI6W1xyXG4gICAgICAwLjAsXHJcbiAgICAgIDAuMDcxOTc2ODAzMjQzMTYwMjUsXHJcbiAgICAgIDAuOTk0MjAxNjAwNTUxNjA1MixcclxuICAgICAgMS4wLFxyXG4gICAgICAwLjAyNjAzNTY4NDI4Mzc3NDczLFxyXG4gICAgICAwLjA3MTk3NjgwMzI0MzE2MDI1LFxyXG4gICAgICAwLjk5NDIwMTYwMDU1MTYwNTIsXHJcbiAgICAgIDEuMCxcclxuICAgICAgMC4wMzIwMDc3NTIwOTMxNDEwNjUsXHJcbiAgICAgIDAuMDcxOTc2ODAzMjQzMTYwMjUsXHJcbiAgICAgIDAuOTk0MjAxNjAwNTUxNjA1MixcclxuICAgICAgMS4wLFxyXG4gICAgICAwLjA1MzcxNjQ5MDQwNDYyMzk0NCxcclxuICAgICAgMC4wNzE5NzY4MDMyNDMxNjAyNSxcclxuICAgICAgMC45OTQyMDE2MDA1NTE2MDUyLFxyXG4gICAgICAxLjAsXHJcbiAgICAgIDAuMDczNTg2NzUwNTEyNDcxMzUsXHJcbiAgICAgIDAuMDcxOTc2ODAzMjQzMTYwMjUsXHJcbiAgICAgIDAuOTk0MjAxNjAwNTUxNjA1MixcclxuICAgICAgMS4wLFxyXG4gICAgICAwLjMzOTQ4NDc3Njk1NTU3MzcsXHJcbiAgICAgIDAuMCxcclxuICAgICAgMC4wLFxyXG4gICAgICAwLjAsXHJcbiAgICAgIDAuMzQ3MTQ2ODgxMzQyODQ2NyxcclxuICAgICAgMS4wLFxyXG4gICAgICAwLjAsXHJcbiAgICAgIDAuMCxcclxuICAgICAgMC40NzAwMDc1NDQ3MjA4MjcsXHJcbiAgICAgIDEuMCxcclxuICAgICAgMC45OTkyMDY1NDI5Njg3NSxcclxuICAgICAgMC4wLFxyXG4gICAgICAxLjAsXHJcbiAgICAgIDEuMCxcclxuICAgICAgMS4wLFxyXG4gICAgICAxLjBcclxuICAgIF1cclxuICB9XHJcblxyXG4gIGNvbnNvbGUubG9nKGNvbG9yTWFwKVxyXG5cclxuICBjb2xvclRyYW5zZmVyRnVuY3Rpb24uYXBwbHlDb2xvck1hcChjb2xvck1hcClcclxuICBjb2xvclRyYW5zZmVyRnVuY3Rpb24ubW9kaWZpZWQoKSAvLyBhcHBseUNvbG9yTWFwIGRvZXMgbm90IGFsd2F5cyB0cmlnZ2VyIG1vZGlmaWVkKClcclxuXHJcbiAgaWYgKGFjdG9yQ29udGV4dC5jb2xvclJhbmdlcy5oYXMoY29tcG9uZW50KSkge1xyXG4gICAgY29uc3QgcmFuZ2UgPSBhY3RvckNvbnRleHQuY29sb3JSYW5nZXMuZ2V0KGNvbXBvbmVudClcclxuICAgIGNvbG9yVHJhbnNmZXJGdW5jdGlvbi5zZXRNYXBwaW5nUmFuZ2UocmFuZ2VbMF0sIHJhbmdlWzFdKVxyXG4gICAgY29sb3JUcmFuc2ZlckZ1bmN0aW9uLnVwZGF0ZVJhbmdlKClcclxuICAgIC8vINC/0L7Qu9C30YPQvdC60Lgg0L3QsNGH0LDQu9C+LCDQutC+0L3QtdGGINC/0L4g0YfQsVxyXG4gICAgY29uc29sZS5sb2cocmFuZ2UpXHJcbiAgfVxyXG5cclxuICAvLyB1cGRhdGUgVUlcclxuICBjb250ZXh0LnNlcnZpY2Uuc2VuZCgnSU1BR0VfQ09MT1JfTUFQX0RFUEVOREVOQ0lFU19VUERBVEUnLCB7XHJcbiAgICBkYXRhOiB7XHJcbiAgICAgIG5hbWUsXHJcbiAgICAgIGNvbXBvbmVudCxcclxuICAgIH0sXHJcbiAgfSlcclxuICBjb250ZXh0LnNlcnZpY2Uuc2VuZCgnUkVOREVSJylcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXBwbHlDb2xvck1hcFxyXG4iXSwibmFtZXMiOlsiZ2V0Q29sb3JNYXAiLCJDT0xPUl9PRkZTRVQiLCJhcHBseUNvbG9yTWFwIiwiY29udGV4dCIsIl9yZWYiLCJfY29udGV4dCRpbWFnZXMkY29sb3IiLCJfcmVmJGRhdGEiLCJkYXRhIiwibmFtZSIsImNvbG9yTWFwIiwiY29tcG9uZW50IiwiYWN0b3JDb250ZXh0IiwiaW1hZ2VzIiwiZ2V0IiwiY29sb3JUcmFuc2ZlckZ1bmN0aW9uIiwiY29sb3JUcmFuc2ZlckZ1bmN0aW9ucyIsImNvbnNvbGUiLCJsb2ciLCJtb2RpZmllZCIsImNvbG9yUmFuZ2VzIiwiaGFzIiwicmFuZ2UiLCJzZXRNYXBwaW5nUmFuZ2UiLCJ1cGRhdGVSYW5nZSIsInNlcnZpY2UiLCJzZW5kIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/Rendering/VTKJS/Images/applyColorMap.js\n");

/***/ }),

/***/ "./src/UserInterface/Geometries/createGeometryColorRangeInput.js":
/*!***********************************************************************!*\
  !*** ./src/UserInterface/Geometries/createGeometryColorRangeInput.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mobx */ \"./node_modules/mobx/lib/mobx.module.js\");\n/* harmony import */ var vtk_js_Sources_Proxy_Core_LookupTableProxy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vtk.js/Sources/Proxy/Core/LookupTableProxy */ \"./node_modules/vtk.js/Sources/Proxy/Core/LookupTableProxy/index.js\");\n/* harmony import */ var _ItkVtkViewer_module_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ItkVtkViewer.module.css */ \"./src/UserInterface/ItkVtkViewer.module.css\");\n/* harmony import */ var _createColorMapIconSelector__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../createColorMapIconSelector */ \"./src/UserInterface/createColorMapIconSelector.js\");\n/* harmony import */ var _customColorMapIcon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../customColorMapIcon */ \"./src/UserInterface/customColorMapIcon.js\");\n\n\n\n\n\n\n\nfunction createColorRangeInput(store, uiContainer) {\n  var minimumInput = document.createElement('input');\n  minimumInput.type = 'number';\n  minimumInput.setAttribute('class', _ItkVtkViewer_module_css__WEBPACK_IMPORTED_MODULE_4__[\"default\"].numberInput);\n  var maximumInput = document.createElement('input');\n  maximumInput.type = 'number';\n  maximumInput.setAttribute('class', _ItkVtkViewer_module_css__WEBPACK_IMPORTED_MODULE_4__[\"default\"].numberInput);\n  function updateColorRangeInput() {\n    var selectedIndex = store.geometriesUI.selectedGeometryIndex;\n    if (!store.geometriesUI.hasScalars[selectedIndex] || store.geometriesUI.hasOnlyDirectColors[selectedIndex]) {\n      return;\n    }\n    var colorByKey = store.geometriesUI.colorBy[selectedIndex].value;\n    var _colorByKey$split = colorByKey.split(':'),\n      _colorByKey$split2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_colorByKey$split, 2),\n      location = _colorByKey$split2[0],\n      colorByArrayName = _colorByKey$split2[1];\n    var geometry = store.geometriesUI.geometries[selectedIndex];\n    var dataArray = location === 'pointData' ? geometry.getPointData().getArrayByName(colorByArrayName) : geometry.getCellData().getArrayByName(colorByArrayName);\n    var range = dataArray.getRange();\n    minimumInput.min = range[0];\n    minimumInput.max = range[1];\n    maximumInput.min = range[0];\n    maximumInput.max = range[1];\n    var data = dataArray.getData();\n    if (data instanceof Float32Array || data instanceof Float64Array) {\n      var step = (range[1] - range[0]) / 100.0;\n      minimumInput.step = step;\n      maximumInput.step = step;\n    }\n    var colorRange = store.geometriesUI.selectedColorRange;\n    minimumInput.value = colorRange[0];\n    maximumInput.value = colorRange[1];\n  }\n  function addColorRangesReactions(index, colorRanges) {\n    if (store.geometriesUI.colorRangesReactions.has(index)) {\n      var _disposer = store.geometriesUI.colorRangesReactions.get(index);\n      _disposer();\n    }\n    var disposer = (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n      return (0,mobx__WEBPACK_IMPORTED_MODULE_2__.toJS)(store.geometriesUI.colorRanges);\n    }, function (colorRanges) {\n      if (index !== store.geometriesUI.selectedGeometryIndex) {\n        return;\n      }\n      var colorRange = store.geometriesUI.selectedColorRange;\n      if (!!colorRange) {\n        minimumInput.value = colorRange[0];\n        maximumInput.value = colorRange[1];\n        var lutProxy = store.geometriesUI.selectedLookupTableProxy;\n        var colorTransferFunction = lutProxy.getLookupTable();\n        colorTransferFunction.setMappingRange.apply(colorTransferFunction, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(colorRange));\n        colorTransferFunction.updateRange();\n        if (!store.renderWindow.getInteractor().isAnimating()) {\n          store.renderWindow.render();\n        }\n      }\n    });\n    store.geometriesUI.colorRangesReactions.set(index, disposer);\n  }\n  function setDefaultColorRangesColorMaps() {\n    var colorByOptions = store.geometriesUI.colorByOptions;\n    if (!!!colorByOptions || colorByOptions.length === 0) {\n      return;\n    }\n    var geometries = store.geometriesUI.geometries;\n    colorByOptions.forEach(function (options, index) {\n      var geometry = geometries[index];\n      if (!store.geometriesUI.colorRanges.has(index)) {\n        var colorRanges = (0,mobx__WEBPACK_IMPORTED_MODULE_2__.observable)(new Map());\n        if (options) {\n          options.forEach(function (option) {\n            var _option$value$split = option.value.split(':'),\n              _option$value$split2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_option$value$split, 2),\n              location = _option$value$split2[0],\n              colorByArrayName = _option$value$split2[1];\n            var dataArray = location === 'pointData' ? geometry.getPointData().getArrayByName(colorByArrayName) : geometry.getCellData().getArrayByName(colorByArrayName);\n            var range = dataArray.getRange();\n            colorRanges.set(option.value, range);\n          });\n        }\n        store.geometriesUI.colorRanges.set(index, colorRanges);\n        addColorRangesReactions(index, colorRanges);\n      } else {\n        // Constrain by min / max of possibly new inputs\n        var _colorRanges = store.geometriesUI.colorRanges.get(index);\n        !!options && options.forEach(function (option) {\n          var _option$value$split3 = option.value.split(':'),\n            _option$value$split4 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_option$value$split3, 2),\n            location = _option$value$split4[0],\n            colorByArrayName = _option$value$split4[1];\n          var dataArray = location === 'pointData' ? geometry.getPointData().getArrayByName(colorByArrayName) : geometry.getCellData().getArrayByName(colorByArrayName);\n          var range = dataArray.getRange();\n          if (_colorRanges.has(option.value)) {\n            var current = _colorRanges.get(option.value);\n            if (current[0] < range[0] || current[1] > range[1]) {\n              var newRange = current.slice();\n              if (current[0] < range[0]) {\n                newRange[0] = range[0];\n              }\n              if (current[1] > range[1]) {\n                newRange[1] = range[1];\n              }\n              _colorRanges.set(option.value, newRange);\n            }\n          } else {\n            _colorRanges.set(option.value, range);\n          }\n        });\n        addColorRangesReactions(index, _colorRanges);\n      }\n      if (store.geometriesUI.colorMaps.length <= index) {\n        var defaultColorMap = 'TestMap';\n        store.geometriesUI.colorMaps.push(defaultColorMap);\n        var lutProxy = store.geometriesUI.selectedLookupTableProxy;\n        if (!!lutProxy) {\n          lutProxy.setPresetName(defaultColorMap);\n        }\n      }\n      if (store.geometriesUI.colorMaps.length <= index) {\n        var _defaultColorMap = 'Viridis (matplotlib)';\n        store.geometriesUI.colorMaps.push(_defaultColorMap);\n        var _lutProxy = store.geometriesUI.selecetdLookupTableProxy;\n        if (!!_lutProxy) {\n          _lutProxy.setPresetName(_defaultColorMap);\n        }\n      }\n    });\n    updateColorRangeInput();\n  }\n  setDefaultColorRangesColorMaps();\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n    return store.geometriesUI.selectedColorRange;\n  }, function (colorRange) {\n    if (!!colorRange) {\n      minimumInput.value = colorRange[0];\n      maximumInput.value = colorRange[1];\n      var lutProxy = store.geometriesUI.selectedLookupTableProxy;\n      var colorTransferFunction = lutProxy.getLookupTable();\n      colorTransferFunction.setMappingRange.apply(colorTransferFunction, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(colorRange));\n      colorTransferFunction.updateRange();\n    }\n  });\n  minimumInput.addEventListener('change', (0,mobx__WEBPACK_IMPORTED_MODULE_2__.action)(function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var selectedIndex = store.geometriesUI.selectedGeometryIndex;\n    var colorByKey = store.geometriesUI.colorBy[selectedIndex].value;\n    var range = store.geometriesUI.colorRanges.get(selectedIndex).get(colorByKey);\n    range[0] = Number(event.target.value);\n    store.geometriesUI.colorRanges.get(selectedIndex).set(colorByKey, range);\n  }));\n  maximumInput.addEventListener('change', (0,mobx__WEBPACK_IMPORTED_MODULE_2__.action)(function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var selectedIndex = store.geometriesUI.selectedGeometryIndex;\n    var colorByKey = store.geometriesUI.colorBy[selectedIndex].value;\n    var range = store.geometriesUI.colorRanges.get(selectedIndex).get(colorByKey);\n    range[1] = Number(event.target.value);\n    store.geometriesUI.colorRanges.get(selectedIndex).set(colorByKey, range);\n  }));\n  var colorMapSelector = document.createElement('div');\n  colorMapSelector.id = \"\".concat(store.id, \"-geometryColorMapSelector\");\n  var iconSelector = (0,_createColorMapIconSelector__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(colorMapSelector);\n  function updateColorCanvas() {\n    var geometryIndex = store.geometriesUI.selectedGeometryIndex;\n    if (!store.geometriesUI.hasScalars[selectedIndex] || store.geometriesUI.hasOnlyDirectColors[geometryIndex]) {\n      return;\n    }\n    var colorMap = store.geometriesUI.colorMaps[geometryIndex];\n    var lookupTableProxy = store.geometriesUI.selectedLookupTableProxy;\n    var colorTransferFunction = lookupTableProxy.getLookupTable();\n    if (colorMap.startsWith('Custom')) {\n      lookupTableProxy.setMode(vtk_js_Sources_Proxy_Core_LookupTableProxy__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Mode.RGBPoints);\n      var colorRange = store.geometriesUI.selectedColorRange;\n      var isIcons = iconSelector.getIcons();\n      if (!!!customIcon) {\n        var colorMapIcon = (0,_customColorMapIcon__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(colorTransferFunction, colorDataRange);\n        customIcon = {\n          iconFilePath: colorMapIcon,\n          iconValue: colorMap\n        };\n        icons.push(customIcon);\n        iconSelector.refresh(icons);\n      } else if (isIcons[isIcons.length - 1].iconValue !== colorMap) {\n        var _colorMapIcon = (0,_customColorMapIcon__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(colorTransferFunction, colorDataRange);\n        isIcons[isIcons.length - 1].element.src = _colorMapIcon;\n        isIcons[isIcons.length - 1].iconFilePath = _colorMapIcon;\n        isIcons[isIcons.length - 1].iconValue = colorMap;\n        isIcons[isIcons.length - 1].element.setAttribute('icon-value', colorMap);\n        isIcons[isIcons.length - 1].element.setAttribute('alt', colorMap);\n        isIcons[isIcons.length - 1].element.setAttribute('title', colorMap);\n      }\n    } else {\n      lookupTableProxy.setPresetName(colorMap);\n      lookupTableProxy.setMode(vtk_js_Sources_Proxy_Core_LookupTableProxy__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Mode.Preset);\n    }\n    iconSelector.setSelectedValue(colorMap);\n    if (!store.renderWindow.getInteractor().isAnimating()) {\n      store.renderWindow.render();\n    }\n  }\n  var customIcon = null;\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n    return store.geometriesUI.colorMaps.slice();\n  }, function (colorMaps) {\n    updateColorCanvas();\n  });\n  colorMapSelector.addEventListener('changed', function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var geometryIndex = store.geometriesUI.selectedGeometryIndex;\n    store.geometriesUI.colorMaps[geometryIndex] = iconSelector.getSelectedValue();\n  });\n  var geometryIndex = store.geometriesUI.selectedGeometryIndex;\n  iconSelector.setSelectedValue(store.geometriesUI.colorMaps[geometryIndex]);\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n    return store.geometriesUI.colorByOptions.slice();\n  }, function () {\n    setDefaultColorRangesColorMaps();\n  });\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n    return store.geometriesUI.selectedGeometryIndex;\n  }, function (selectedIndex) {\n    var directColors = store.geometriesUI.hasOnlyDirectColors;\n    if (directColors[selectedIndex]) {\n      uiContainer.style.display = 'flex';\n      updateColorRangeInput();\n      updateColorCanvas();\n    } else {\n      uiContainer.style.display = 'none';\n    }\n  });\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n    return store.geometriesUI.colorBy.slice();\n  }, function () {\n    updateColorRangeInput();\n    updateColorCanvas();\n  });\n  updateColorCanvas();\n  var directColors = store.geometriesUI.hasOnlyDirectColors;\n  var selectedIndex = store.geometriesUI.selectedGeometryIndex;\n  if (directColors[selectedIndex]) {\n    uiContainer.style.display = 'flex';\n  } else {\n    uiContainer.style.display = 'none';\n  }\n  uiContainer.appendChild(minimumInput);\n  uiContainer.appendChild(colorMapSelector);\n  uiContainer.appendChild(maximumInput);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createColorRangeInput);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/UserInterface/Geometries/createGeometryColorRangeInput.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("e4e92a0519ddf309a7e0")
/******/ })();
/******/ 
/******/ }
);