"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdateitk_vtk_viewer"]("main",{

/***/ "./src/UserInterface/Geometries/createGeometryColorRangeInput.js":
/*!***********************************************************************!*\
  !*** ./src/UserInterface/Geometries/createGeometryColorRangeInput.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/toConsumableArray */ \"./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\");\n/* harmony import */ var _babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @babel/runtime/helpers/slicedToArray */ \"./node_modules/@babel/runtime/helpers/esm/slicedToArray.js\");\n/* harmony import */ var mobx__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! mobx */ \"./node_modules/mobx/lib/mobx.module.js\");\n/* harmony import */ var vtk_js_Sources_Proxy_Core_LookupTableProxy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vtk.js/Sources/Proxy/Core/LookupTableProxy */ \"./node_modules/vtk.js/Sources/Proxy/Core/LookupTableProxy/index.js\");\n/* harmony import */ var _ItkVtkViewer_module_css__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ItkVtkViewer.module.css */ \"./src/UserInterface/ItkVtkViewer.module.css\");\n/* harmony import */ var _createColorMapIconSelector__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../createColorMapIconSelector */ \"./src/UserInterface/createColorMapIconSelector.js\");\n/* harmony import */ var _customColorMapIcon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../customColorMapIcon */ \"./src/UserInterface/customColorMapIcon.js\");\n\n\n\n\n\n\n\nfunction createColorRangeInput(store, uiContainer) {\n  var minimumInput = document.createElement('input');\n  minimumInput.type = 'number';\n  minimumInput.setAttribute('class', _ItkVtkViewer_module_css__WEBPACK_IMPORTED_MODULE_4__[\"default\"].numberInput);\n  var maximumInput = document.createElement('input');\n  maximumInput.type = 'number';\n  maximumInput.setAttribute('class', _ItkVtkViewer_module_css__WEBPACK_IMPORTED_MODULE_4__[\"default\"].numberInput);\n  function updateColorRangeInput() {\n    var selectedIndex = store.geometriesUI.selectedGeometryIndex;\n    if (!store.geometriesUI.hasScalars[selectedIndex] || store.geometriesUI.hasOnlyDirectColors[selectedIndex]) {\n      return;\n    }\n    var colorByKey = store.geometriesUI.colorBy[selectedIndex].value;\n    var _colorByKey$split = colorByKey.split(':'),\n      _colorByKey$split2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_colorByKey$split, 2),\n      location = _colorByKey$split2[0],\n      colorByArrayName = _colorByKey$split2[1];\n    var geometry = store.geometriesUI.geometries[selectedIndex];\n    var dataArray = location === 'pointData' ? geometry.getPointData().getArrayByName(colorByArrayName) : geometry.getCellData().getArrayByName(colorByArrayName);\n    var range = dataArray.getRange();\n    minimumInput.min = range[0];\n    minimumInput.max = range[1];\n    maximumInput.min = range[0];\n    maximumInput.max = range[1];\n    var data = dataArray.getData();\n    if (data instanceof Float32Array || data instanceof Float64Array) {\n      var step = (range[1] - range[0]) / 100.0;\n      minimumInput.step = step;\n      maximumInput.step = step;\n    }\n    var colorRange = store.geometriesUI.selectedColorRange;\n    minimumInput.value = colorRange[0];\n    maximumInput.value = colorRange[1];\n  }\n  function addColorRangesReactions(index, colorRanges) {\n    if (store.geometriesUI.colorRangesReactions.has(index)) {\n      var _disposer = store.geometriesUI.colorRangesReactions.get(index);\n      _disposer();\n    }\n    var disposer = (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n      return (0,mobx__WEBPACK_IMPORTED_MODULE_2__.toJS)(store.geometriesUI.colorRanges);\n    }, function (colorRanges) {\n      if (index !== store.geometriesUI.selectedGeometryIndex) {\n        return;\n      }\n      var colorRange = store.geometriesUI.selectedColorRange;\n      if (!!colorRange) {\n        minimumInput.value = colorRange[0];\n        maximumInput.value = colorRange[1];\n        var lutProxy = store.geometriesUI.selectedLookupTableProxy;\n        var colorTransferFunction = lutProxy.getLookupTable();\n        colorTransferFunction.setMappingRange.apply(colorTransferFunction, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(colorRange));\n        colorTransferFunction.updateRange();\n        if (!store.renderWindow.getInteractor().isAnimating()) {\n          store.renderWindow.render();\n        }\n      }\n    });\n    store.geometriesUI.colorRangesReactions.set(index, disposer);\n  }\n  function setDefaultColorRangesColorMaps() {\n    var colorByOptions = store.geometriesUI.colorByOptions;\n    if (!!!colorByOptions || colorByOptions.length === 0) {\n      return;\n    }\n    var geometries = store.geometriesUI.geometries;\n    colorByOptions.forEach(function (options, index) {\n      var geometry = geometries[index];\n      if (!store.geometriesUI.colorRanges.has(index)) {\n        var colorRanges = (0,mobx__WEBPACK_IMPORTED_MODULE_2__.observable)(new Map());\n        if (options) {\n          options.forEach(function (option) {\n            var _option$value$split = option.value.split(':'),\n              _option$value$split2 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_option$value$split, 2),\n              location = _option$value$split2[0],\n              colorByArrayName = _option$value$split2[1];\n            var dataArray = location === 'pointData' ? geometry.getPointData().getArrayByName(colorByArrayName) : geometry.getCellData().getArrayByName(colorByArrayName);\n            var range = dataArray.getRange();\n            colorRanges.set(option.value, range);\n          });\n        }\n        store.geometriesUI.colorRanges.set(index, colorRanges);\n        addColorRangesReactions(index, colorRanges);\n      } else {\n        // Constrain by min / max of possibly new inputs\n        var _colorRanges = store.geometriesUI.colorRanges.get(index);\n        !!options && options.forEach(function (option) {\n          var _option$value$split3 = option.value.split(':'),\n            _option$value$split4 = (0,_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(_option$value$split3, 2),\n            location = _option$value$split4[0],\n            colorByArrayName = _option$value$split4[1];\n          var dataArray = location === 'pointData' ? geometry.getPointData().getArrayByName(colorByArrayName) : geometry.getCellData().getArrayByName(colorByArrayName);\n          var range = dataArray.getRange();\n          if (_colorRanges.has(option.value)) {\n            var current = _colorRanges.get(option.value);\n            if (current[0] < range[0] || current[1] > range[1]) {\n              var newRange = current.slice();\n              if (current[0] < range[0]) {\n                newRange[0] = range[0];\n              }\n              if (current[1] > range[1]) {\n                newRange[1] = range[1];\n              }\n              _colorRanges.set(option.value, newRange);\n            }\n          } else {\n            _colorRanges.set(option.value, range);\n          }\n        });\n        addColorRangesReactions(index, _colorRanges);\n      }\n      if (store.geometriesUI.colorMaps.length <= index) {\n        var defaultColorMap = 'TestMap';\n        store.geometriesUI.colorMaps.push(defaultColorMap);\n        var lutProxy = store.geometriesUI.selectedLookupTableProxy;\n        if (!!lutProxy) {\n          lutProxy.setPresetName(defaultColorMap);\n        }\n      }\n      if (store.geometriesUI.colorMaps.length <= index) {\n        var _defaultColorMap = 'TestMap';\n        store.geometriesUI.colorMaps.push(_defaultColorMap);\n        var _lutProxy = store.geometriesUI.selecetdLookupTableProxy;\n        if (!!_lutProxy) {\n          _lutProxy.setPresetName(_defaultColorMap);\n        }\n      }\n    });\n    updateColorRangeInput();\n  }\n  setDefaultColorRangesColorMaps();\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n    return store.geometriesUI.selectedColorRange;\n  }, function (colorRange) {\n    if (!!colorRange) {\n      minimumInput.value = colorRange[0];\n      maximumInput.value = colorRange[1];\n      var lutProxy = store.geometriesUI.selectedLookupTableProxy;\n      var colorTransferFunction = lutProxy.getLookupTable();\n      colorTransferFunction.setMappingRange.apply(colorTransferFunction, (0,_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(colorRange));\n      colorTransferFunction.updateRange();\n    }\n  });\n  minimumInput.addEventListener('change', (0,mobx__WEBPACK_IMPORTED_MODULE_2__.action)(function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var selectedIndex = store.geometriesUI.selectedGeometryIndex;\n    var colorByKey = store.geometriesUI.colorBy[selectedIndex].value;\n    var range = store.geometriesUI.colorRanges.get(selectedIndex).get(colorByKey);\n    range[0] = Number(event.target.value);\n    store.geometriesUI.colorRanges.get(selectedIndex).set(colorByKey, range);\n  }));\n  maximumInput.addEventListener('change', (0,mobx__WEBPACK_IMPORTED_MODULE_2__.action)(function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var selectedIndex = store.geometriesUI.selectedGeometryIndex;\n    var colorByKey = store.geometriesUI.colorBy[selectedIndex].value;\n    var range = store.geometriesUI.colorRanges.get(selectedIndex).get(colorByKey);\n    range[1] = Number(event.target.value);\n    store.geometriesUI.colorRanges.get(selectedIndex).set(colorByKey, range);\n  }));\n  var colorMapSelector = document.createElement('div');\n  colorMapSelector.id = \"\".concat(store.id, \"-geometryColorMapSelector\");\n  var iconSelector = (0,_createColorMapIconSelector__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(colorMapSelector);\n  function updateColorCanvas() {\n    var geometryIndex = store.geometriesUI.selectedGeometryIndex;\n    if (!store.geometriesUI.hasScalars[selectedIndex] || store.geometriesUI.hasOnlyDirectColors[geometryIndex]) {\n      return;\n    }\n    var colorMap = store.geometriesUI.colorMaps[geometryIndex];\n    var lookupTableProxy = store.geometriesUI.selectedLookupTableProxy;\n    var colorTransferFunction = lookupTableProxy.getLookupTable();\n    if (colorMap.startsWith('Custom')) {\n      lookupTableProxy.setMode(vtk_js_Sources_Proxy_Core_LookupTableProxy__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Mode.RGBPoints);\n      var colorRange = store.geometriesUI.selectedColorRange;\n      var isIcons = iconSelector.getIcons();\n      if (!!!customIcon) {\n        var colorMapIcon = (0,_customColorMapIcon__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(colorTransferFunction, colorDataRange);\n        customIcon = {\n          iconFilePath: colorMapIcon,\n          iconValue: colorMap\n        };\n        icons.push(customIcon);\n        iconSelector.refresh(icons);\n      } else if (isIcons[isIcons.length - 1].iconValue !== colorMap) {\n        var _colorMapIcon = (0,_customColorMapIcon__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(colorTransferFunction, colorDataRange);\n        isIcons[isIcons.length - 1].element.src = _colorMapIcon;\n        isIcons[isIcons.length - 1].iconFilePath = _colorMapIcon;\n        isIcons[isIcons.length - 1].iconValue = colorMap;\n        isIcons[isIcons.length - 1].element.setAttribute('icon-value', colorMap);\n        isIcons[isIcons.length - 1].element.setAttribute('alt', colorMap);\n        isIcons[isIcons.length - 1].element.setAttribute('title', colorMap);\n      }\n    } else {\n      lookupTableProxy.setPresetName(colorMap);\n      lookupTableProxy.setMode(vtk_js_Sources_Proxy_Core_LookupTableProxy__WEBPACK_IMPORTED_MODULE_3__[\"default\"].Mode.Preset);\n    }\n    iconSelector.setSelectedValue(colorMap);\n    if (!store.renderWindow.getInteractor().isAnimating()) {\n      store.renderWindow.render();\n    }\n  }\n  var customIcon = null;\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n    return store.geometriesUI.colorMaps.slice();\n  }, function (colorMaps) {\n    updateColorCanvas();\n  });\n  colorMapSelector.addEventListener('changed', function (event) {\n    event.preventDefault();\n    event.stopPropagation();\n    var geometryIndex = store.geometriesUI.selectedGeometryIndex;\n    store.geometriesUI.colorMaps[geometryIndex] = iconSelector.getSelectedValue();\n  });\n  var geometryIndex = store.geometriesUI.selectedGeometryIndex;\n  iconSelector.setSelectedValue(store.geometriesUI.colorMaps[geometryIndex]);\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n    return store.geometriesUI.colorByOptions.slice();\n  }, function () {\n    setDefaultColorRangesColorMaps();\n  });\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n    return store.geometriesUI.selectedGeometryIndex;\n  }, function (selectedIndex) {\n    var directColors = store.geometriesUI.hasOnlyDirectColors;\n    if (directColors[selectedIndex]) {\n      uiContainer.style.display = 'flex';\n      updateColorRangeInput();\n      updateColorCanvas();\n    } else {\n      uiContainer.style.display = 'none';\n    }\n  });\n  (0,mobx__WEBPACK_IMPORTED_MODULE_2__.reaction)(function () {\n    return store.geometriesUI.colorBy.slice();\n  }, function () {\n    updateColorRangeInput();\n    updateColorCanvas();\n  });\n  updateColorCanvas();\n  var directColors = store.geometriesUI.hasOnlyDirectColors;\n  var selectedIndex = store.geometriesUI.selectedGeometryIndex;\n  if (directColors[selectedIndex]) {\n    uiContainer.style.display = 'flex';\n  } else {\n    uiContainer.style.display = 'none';\n  }\n  uiContainer.appendChild(minimumInput);\n  uiContainer.appendChild(colorMapSelector);\n  uiContainer.appendChild(maximumInput);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (createColorRangeInput);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/UserInterface/Geometries/createGeometryColorRangeInput.js\n");

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ /* webpack/runtime/getFullHash */
/******/ (() => {
/******/ 	__webpack_require__.h = () => ("2a4250fd84f96c493190")
/******/ })();
/******/ 
/******/ }
);